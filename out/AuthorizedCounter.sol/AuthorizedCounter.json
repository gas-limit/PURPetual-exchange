{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCount",
          "type": "uint256"
        }
      ],
      "name": "CountChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decrement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004b565b50600060015561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102b2806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632baeceb714610067578063715018a6146100715780638da5cb5b14610079578063a87d942c14610099578063d09de08a146100aa578063f2fde38b146100b2575b600080fd5b61006f6100c5565b005b61006f61011c565b6000546040516001600160a01b0390911681526020015b60405180910390f35b600154604051908152602001610090565b61006f610130565b61006f6100c036600461020a565b61014a565b6100cd61018d565b60018060008282546100df9190610250565b90915550506001546040519081527f0ef4482aceb854636f33f9cd319f9e1cd6fe3aa2e60523f3583c287b893824459060200160405180910390a1565b61012461018d565b61012e60006101ba565b565b61013861018d565b60018060008282546100df9190610269565b61015261018d565b6001600160a01b03811661018157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61018a816101ba565b50565b6000546001600160a01b0316331461012e5760405163118cdaa760e01b8152336004820152602401610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561021c57600080fd5b81356001600160a01b038116811461023357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102635761026361023a565b92915050565b808201808211156102635761026361023a56fea2646970667358221220e068256dc0ecd8f899b0a9eea5b9949c239e63b838a9d5b9d116c5eedbb95c9f64736f6c63430008150033",
    "sourceMap": "111:469:6:-:0;;;226:60;;;;;;;;;-1:-1:-1;248:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:9;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;278:1:6::1;270:5;:9:::0;111:469;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:9:-;111:469:6;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80632baeceb714610067578063715018a6146100715780638da5cb5b14610079578063a87d942c14610099578063d09de08a146100aa578063f2fde38b146100b2575b600080fd5b61006f6100c5565b005b61006f61011c565b6000546040516001600160a01b0390911681526020015b60405180910390f35b600154604051908152602001610090565b61006f610130565b61006f6100c036600461020a565b61014a565b6100cd61018d565b60018060008282546100df9190610250565b90915550506001546040519081527f0ef4482aceb854636f33f9cd319f9e1cd6fe3aa2e60523f3583c287b893824459060200160405180910390a1565b61012461018d565b61012e60006101ba565b565b61013861018d565b60018060008282546100df9190610269565b61015261018d565b6001600160a01b03811661018157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61018a816101ba565b50565b6000546001600160a01b0316331461012e5760405163118cdaa760e01b8152336004820152602401610178565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561021c57600080fd5b81356001600160a01b038116811461023357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102635761026361023a565b92915050565b808201808211156102635761026361023a56fea2646970667358221220e068256dc0ecd8f899b0a9eea5b9949c239e63b838a9d5b9d116c5eedbb95c9f64736f6c63430008150033",
    "sourceMap": "111:469:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;397:99;;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;160:51:9;;148:2;133:18;1638:85:0;;;;;;;;502:76:6;566:5;;502:76;;368:25:9;;;356:2;341:18;502:76:6;222:177:9;292:99:6;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;397:99:6:-;1531:13:0;:11;:13::i;:::-;454:1:6::1;445:5:::0;::::1;:10;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;483:5:6::1;::::0;470:19:::1;::::0;368:25:9;;;470:19:6::1;::::0;356:2:9;341:18;470:19:6::1;;;;;;;397:99::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;292:99:6:-;1531:13:0;:11;:13::i;:::-;349:1:6::1;340:5:::0;::::1;:10;;;;;;;:::i;2543:215:0:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:9::0;133:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;160:51:9;133:18;;1901:40:0;14:203:9;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;404:286:9:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;558:23;;-1:-1:-1;;;;;610:31:9;;600:42;;590:70;;656:1;653;646:12;590:70;679:5;404:286;-1:-1:-1;;;404:286:9:o;695:127::-;756:10;751:3;747:20;744:1;737:31;787:4;784:1;777:15;811:4;808:1;801:15;827:128;894:9;;;915:11;;;912:37;;;929:18;;:::i;:::-;827:128;;;;:::o;960:125::-;1025:9;;;1046:10;;;1043:36;;;1059:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "decrement()": "2baeceb7",
    "getCount()": "a87d942c",
    "increment()": "d09de08a",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCount\",\"type\":\"uint256\"}],\"name\":\"CountChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AuthorizedCounter.sol\":\"AuthorizedCounter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"src/AuthorizedCounter.sol\":{\"keccak256\":\"0x94f27a7f5e6a9a3b7cb7caedc8b87f0a9f9d43fe6c01b3076b8916721b46c3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8db5045b67fab9dbba4811ad669c45229e5a279a93a732b34d84d530c456ee2\",\"dweb:/ipfs/QmSXypjt7YxPcFBSYWxWBHn1B1u8d1Jt7TNVwKrSV1gtSK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CountChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decrement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increment"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/AuthorizedCounter.sol": "AuthorizedCounter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "src/AuthorizedCounter.sol": {
        "keccak256": "0x94f27a7f5e6a9a3b7cb7caedc8b87f0a9f9d43fe6c01b3076b8916721b46c3ce",
        "urls": [
          "bzz-raw://a8db5045b67fab9dbba4811ad669c45229e5a279a93a732b34d84d530c456ee2",
          "dweb:/ipfs/QmSXypjt7YxPcFBSYWxWBHn1B1u8d1Jt7TNVwKrSV1gtSK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/AuthorizedCounter.sol",
    "id": 887,
    "exportedSymbols": {
      "AuthorizedCounter": [
        886
      ],
      "Context": [
        826
      ],
      "Ownable": [
        147
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:549:6",
    "nodes": [
      {
        "id": 828,
        "nodeType": "PragmaDirective",
        "src": "32:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 829,
        "nodeType": "ImportDirective",
        "src": "57:52:6",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 887,
        "sourceUnit": 148,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 886,
        "nodeType": "ContractDefinition",
        "src": "111:469:6",
        "nodes": [
          {
            "id": 833,
            "nodeType": "VariableDeclaration",
            "src": "155:21:6",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "count",
            "nameLocation": "171:5:6",
            "scope": 886,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 832,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "155:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 837,
            "nodeType": "EventDefinition",
            "src": "183:37:6",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0ef4482aceb854636f33f9cd319f9e1cd6fe3aa2e60523f3583c287b89382445",
            "name": "CountChanged",
            "nameLocation": "189:12:6",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newCount",
                  "nameLocation": "210:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "202:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "201:18:6"
            }
          },
          {
            "id": 849,
            "nodeType": "FunctionDefinition",
            "src": "226:60:6",
            "nodes": [],
            "body": {
              "id": 848,
              "nodeType": "Block",
              "src": "260:26:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 844,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "270:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "278:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "270:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "270:9:6"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 840,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "248:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "252:6:6",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "248:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 842,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 839,
                  "name": "Ownable",
                  "nameLocations": [
                    "240:7:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "240:7:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "240:19:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "237:2:6"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:0:6"
            },
            "scope": 886,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 863,
            "nodeType": "FunctionDefinition",
            "src": "292:99:6",
            "nodes": [],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "330:61:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 854,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "340:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "349:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "340:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "340:10:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 859,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "378:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 858,
                      "name": "CountChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "365:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "EmitStatement",
                  "src": "360:24:6"
                }
              ]
            },
            "functionSelector": "d09de08a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 851,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "320:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "320:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "320:9:6"
              }
            ],
            "name": "increment",
            "nameLocation": "301:9:6",
            "parameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:6"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:6"
            },
            "scope": 886,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 877,
            "nodeType": "FunctionDefinition",
            "src": "397:99:6",
            "nodes": [],
            "body": {
              "id": 876,
              "nodeType": "Block",
              "src": "435:61:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 868,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "445:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "454:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "445:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "445:10:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 873,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "483:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 872,
                      "name": "CountChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 837,
                      "src": "470:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "EmitStatement",
                  "src": "465:24:6"
                }
              ]
            },
            "functionSelector": "2baeceb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 866,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 865,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "425:9:6"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "425:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "425:9:6"
              }
            ],
            "name": "decrement",
            "nameLocation": "406:9:6",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:6"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:6"
            },
            "scope": 886,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 885,
            "nodeType": "FunctionDefinition",
            "src": "502:76:6",
            "nodes": [],
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "549:29:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 882,
                    "name": "count",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 833,
                    "src": "566:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 881,
                  "id": 883,
                  "nodeType": "Return",
                  "src": "559:12:6"
                }
              ]
            },
            "functionSelector": "a87d942c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCount",
            "nameLocation": "511:8:6",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:2:6"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "543:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:6:6"
            },
            "scope": 886,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 830,
              "name": "Ownable",
              "nameLocations": [
                "141:7:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "141:7:6"
            },
            "id": 831,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:6"
          }
        ],
        "canonicalName": "AuthorizedCounter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          886,
          147,
          826
        ],
        "name": "AuthorizedCounter",
        "nameLocation": "120:17:6",
        "scope": 887,
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24,
          837
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 6
}